// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentRegistrationSystem.Repository;

#nullable disable

namespace StudentRegistrationSystem.Repository.Migrations
{
    [DbContext(typeof(DbContextStudentRegistration))]
    [Migration("20250606173620_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentRegistrationSystem.Models.Cursus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DocentId")
                        .HasColumnType("int");

                    b.Property<int>("Studiepunten")
                        .HasColumnType("int");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocentId");

                    b.ToTable("Cursus");
                });

            modelBuilder.Entity("StudentRegistrationSystem.Models.Docent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Docenten");
                });

            modelBuilder.Entity("StudentRegistrationSystem.Models.Inschrijving", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CursusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InschrijfDatum")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentId", "CursusId");

                    b.HasIndex("CursusId");

                    b.ToTable("Inschrijvingen");
                });

            modelBuilder.Entity("StudentRegistrationSystem.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Achternaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("StudentRegistrationSystem.Models.Cursus", b =>
                {
                    b.HasOne("StudentRegistrationSystem.Models.Docent", "Docent")
                        .WithMany("Cursus")
                        .HasForeignKey("DocentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Docent");
                });

            modelBuilder.Entity("StudentRegistrationSystem.Models.Inschrijving", b =>
                {
                    b.HasOne("StudentRegistrationSystem.Models.Cursus", "Cursus")
                        .WithMany("Inschrijvingen")
                        .HasForeignKey("CursusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentRegistrationSystem.Models.Student", "Student")
                        .WithMany("Inschrijvingen")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cursus");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentRegistrationSystem.Models.Cursus", b =>
                {
                    b.Navigation("Inschrijvingen");
                });

            modelBuilder.Entity("StudentRegistrationSystem.Models.Docent", b =>
                {
                    b.Navigation("Cursus");
                });

            modelBuilder.Entity("StudentRegistrationSystem.Models.Student", b =>
                {
                    b.Navigation("Inschrijvingen");
                });
#pragma warning restore 612, 618
        }
    }
}
